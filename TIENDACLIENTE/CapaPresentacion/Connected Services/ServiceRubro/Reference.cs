//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceRubro
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoRubro", Namespace="http://schemas.datacontract.org/2004/07/CapaServicioServidor")]
    public partial class DtoRubro : object
    {
        
        private string DescripcionField;
        
        private System.DateTime FechaRegistroField;
        
        private int IdRubroField;
        
        private ServiceRubro.Estado oEstadoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion
        {
            get
            {
                return this.DescripcionField;
            }
            set
            {
                this.DescripcionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaRegistro
        {
            get
            {
                return this.FechaRegistroField;
            }
            set
            {
                this.FechaRegistroField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRubro
        {
            get
            {
                return this.IdRubroField;
            }
            set
            {
                this.IdRubroField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceRubro.Estado oEstado
        {
            get
            {
                return this.oEstadoField;
            }
            set
            {
                this.oEstadoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Estado", Namespace="http://schemas.datacontract.org/2004/07/CapaNegocio")]
    public enum Estado : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Activo = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactivo = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RubroProducto", Namespace="http://schemas.datacontract.org/2004/07/CapaNegocio")]
    public partial class RubroProducto : object
    {
        
        private string DescripcionField;
        
        private System.DateTime FechaRegistroField;
        
        private int IdRubroField;
        
        private ServiceRubro.Estado oEstadoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion
        {
            get
            {
                return this.DescripcionField;
            }
            set
            {
                this.DescripcionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaRegistro
        {
            get
            {
                return this.FechaRegistroField;
            }
            set
            {
                this.FechaRegistroField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRubro
        {
            get
            {
                return this.IdRubroField;
            }
            set
            {
                this.IdRubroField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceRubro.Estado oEstado
        {
            get
            {
                return this.oEstadoField;
            }
            set
            {
                this.oEstadoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRubro.IServiceRubro")]
    public interface IServiceRubro
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/AgregarRubro", ReplyAction="http://tempuri.org/IServiceRubro/AgregarRubroResponse")]
        bool AgregarRubro(ServiceRubro.DtoRubro oRubro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/AgregarRubro", ReplyAction="http://tempuri.org/IServiceRubro/AgregarRubroResponse")]
        System.Threading.Tasks.Task<bool> AgregarRubroAsync(ServiceRubro.DtoRubro oRubro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/ModificarRubro", ReplyAction="http://tempuri.org/IServiceRubro/ModificarRubroResponse")]
        bool ModificarRubro(ServiceRubro.DtoRubro oRubro, int IdRubro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/ModificarRubro", ReplyAction="http://tempuri.org/IServiceRubro/ModificarRubroResponse")]
        System.Threading.Tasks.Task<bool> ModificarRubroAsync(ServiceRubro.DtoRubro oRubro, int IdRubro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/EliminarRubro", ReplyAction="http://tempuri.org/IServiceRubro/EliminarRubroResponse")]
        bool EliminarRubro(int IdRubro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/EliminarRubro", ReplyAction="http://tempuri.org/IServiceRubro/EliminarRubroResponse")]
        System.Threading.Tasks.Task<bool> EliminarRubroAsync(int IdRubro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/ListaRubro", ReplyAction="http://tempuri.org/IServiceRubro/ListaRubroResponse")]
        System.Collections.Generic.List<ServiceRubro.DtoRubro> ListaRubro();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/ListaRubro", ReplyAction="http://tempuri.org/IServiceRubro/ListaRubroResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceRubro.DtoRubro>> ListaRubroAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/ObtenerRubro", ReplyAction="http://tempuri.org/IServiceRubro/ObtenerRubroResponse")]
        ServiceRubro.RubroProducto ObtenerRubro(string oRubro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRubro/ObtenerRubro", ReplyAction="http://tempuri.org/IServiceRubro/ObtenerRubroResponse")]
        System.Threading.Tasks.Task<ServiceRubro.RubroProducto> ObtenerRubroAsync(string oRubro);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface IServiceRubroChannel : ServiceRubro.IServiceRubro, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class ServiceRubroClient : System.ServiceModel.ClientBase<ServiceRubro.IServiceRubro>, ServiceRubro.IServiceRubro
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceRubroClient() : 
                base(ServiceRubroClient.GetDefaultBinding(), ServiceRubroClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceRubro.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceRubroClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceRubroClient.GetBindingForEndpoint(endpointConfiguration), ServiceRubroClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceRubroClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceRubroClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceRubroClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceRubroClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceRubroClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public bool AgregarRubro(ServiceRubro.DtoRubro oRubro)
        {
            return base.Channel.AgregarRubro(oRubro);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarRubroAsync(ServiceRubro.DtoRubro oRubro)
        {
            return base.Channel.AgregarRubroAsync(oRubro);
        }
        
        public bool ModificarRubro(ServiceRubro.DtoRubro oRubro, int IdRubro)
        {
            return base.Channel.ModificarRubro(oRubro, IdRubro);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarRubroAsync(ServiceRubro.DtoRubro oRubro, int IdRubro)
        {
            return base.Channel.ModificarRubroAsync(oRubro, IdRubro);
        }
        
        public bool EliminarRubro(int IdRubro)
        {
            return base.Channel.EliminarRubro(IdRubro);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarRubroAsync(int IdRubro)
        {
            return base.Channel.EliminarRubroAsync(IdRubro);
        }
        
        public System.Collections.Generic.List<ServiceRubro.DtoRubro> ListaRubro()
        {
            return base.Channel.ListaRubro();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceRubro.DtoRubro>> ListaRubroAsync()
        {
            return base.Channel.ListaRubroAsync();
        }
        
        public ServiceRubro.RubroProducto ObtenerRubro(string oRubro)
        {
            return base.Channel.ObtenerRubro(oRubro);
        }
        
        public System.Threading.Tasks.Task<ServiceRubro.RubroProducto> ObtenerRubroAsync(string oRubro)
        {
            return base.Channel.ObtenerRubroAsync(oRubro);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceRubro))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceRubro))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:10524/ServiceRubro.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceRubroClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceRubro);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceRubroClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceRubro);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceRubro,
        }
    }
}
