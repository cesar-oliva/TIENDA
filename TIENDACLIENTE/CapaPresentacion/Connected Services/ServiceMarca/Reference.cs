//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceMarca
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoMarca", Namespace="http://schemas.datacontract.org/2004/07/CapaServicioServidor")]
    public partial class DtoMarca : object
    {
        
        private string DescripcionField;
        
        private int IdMarcaField;
        
        private ServiceMarca.Estado OEstadoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion
        {
            get
            {
                return this.DescripcionField;
            }
            set
            {
                this.DescripcionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMarca
        {
            get
            {
                return this.IdMarcaField;
            }
            set
            {
                this.IdMarcaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMarca.Estado OEstado
        {
            get
            {
                return this.OEstadoField;
            }
            set
            {
                this.OEstadoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Estado", Namespace="http://schemas.datacontract.org/2004/07/CapaNegocio")]
    public enum Estado : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Activo = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactivo = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Marca", Namespace="http://schemas.datacontract.org/2004/07/CapaNegocio")]
    public partial class Marca : object
    {
        
        private string DescripcionField;
        
        private int IdMarcaField;
        
        private ServiceMarca.Estado OEstadoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion
        {
            get
            {
                return this.DescripcionField;
            }
            set
            {
                this.DescripcionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMarca
        {
            get
            {
                return this.IdMarcaField;
            }
            set
            {
                this.IdMarcaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMarca.Estado OEstado
        {
            get
            {
                return this.OEstadoField;
            }
            set
            {
                this.OEstadoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceMarca.IServiceMarca")]
    public interface IServiceMarca
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/AgregarMarca", ReplyAction="http://tempuri.org/IServiceMarca/AgregarMarcaResponse")]
        bool AgregarMarca(ServiceMarca.DtoMarca oMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/AgregarMarca", ReplyAction="http://tempuri.org/IServiceMarca/AgregarMarcaResponse")]
        System.Threading.Tasks.Task<bool> AgregarMarcaAsync(ServiceMarca.DtoMarca oMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/ModificarMarca", ReplyAction="http://tempuri.org/IServiceMarca/ModificarMarcaResponse")]
        bool ModificarMarca(ServiceMarca.DtoMarca oMarca, int IdMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/ModificarMarca", ReplyAction="http://tempuri.org/IServiceMarca/ModificarMarcaResponse")]
        System.Threading.Tasks.Task<bool> ModificarMarcaAsync(ServiceMarca.DtoMarca oMarca, int IdMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/EliminarMarca", ReplyAction="http://tempuri.org/IServiceMarca/EliminarMarcaResponse")]
        bool EliminarMarca(int IdMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/EliminarMarca", ReplyAction="http://tempuri.org/IServiceMarca/EliminarMarcaResponse")]
        System.Threading.Tasks.Task<bool> EliminarMarcaAsync(int IdMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/ListaMarca", ReplyAction="http://tempuri.org/IServiceMarca/ListaMarcaResponse")]
        System.Collections.Generic.List<ServiceMarca.DtoMarca> ListaMarca();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/ListaMarca", ReplyAction="http://tempuri.org/IServiceMarca/ListaMarcaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceMarca.DtoMarca>> ListaMarcaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/ObtenerMarca", ReplyAction="http://tempuri.org/IServiceMarca/ObtenerMarcaResponse")]
        ServiceMarca.Marca ObtenerMarca(string oMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMarca/ObtenerMarca", ReplyAction="http://tempuri.org/IServiceMarca/ObtenerMarcaResponse")]
        System.Threading.Tasks.Task<ServiceMarca.Marca> ObtenerMarcaAsync(string oMarca);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface IServiceMarcaChannel : ServiceMarca.IServiceMarca, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class ServiceMarcaClient : System.ServiceModel.ClientBase<ServiceMarca.IServiceMarca>, ServiceMarca.IServiceMarca
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceMarcaClient() : 
                base(ServiceMarcaClient.GetDefaultBinding(), ServiceMarcaClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceMarca.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceMarcaClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceMarcaClient.GetBindingForEndpoint(endpointConfiguration), ServiceMarcaClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceMarcaClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceMarcaClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceMarcaClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceMarcaClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceMarcaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public bool AgregarMarca(ServiceMarca.DtoMarca oMarca)
        {
            return base.Channel.AgregarMarca(oMarca);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarMarcaAsync(ServiceMarca.DtoMarca oMarca)
        {
            return base.Channel.AgregarMarcaAsync(oMarca);
        }
        
        public bool ModificarMarca(ServiceMarca.DtoMarca oMarca, int IdMarca)
        {
            return base.Channel.ModificarMarca(oMarca, IdMarca);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarMarcaAsync(ServiceMarca.DtoMarca oMarca, int IdMarca)
        {
            return base.Channel.ModificarMarcaAsync(oMarca, IdMarca);
        }
        
        public bool EliminarMarca(int IdMarca)
        {
            return base.Channel.EliminarMarca(IdMarca);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarMarcaAsync(int IdMarca)
        {
            return base.Channel.EliminarMarcaAsync(IdMarca);
        }
        
        public System.Collections.Generic.List<ServiceMarca.DtoMarca> ListaMarca()
        {
            return base.Channel.ListaMarca();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceMarca.DtoMarca>> ListaMarcaAsync()
        {
            return base.Channel.ListaMarcaAsync();
        }
        
        public ServiceMarca.Marca ObtenerMarca(string oMarca)
        {
            return base.Channel.ObtenerMarca(oMarca);
        }
        
        public System.Threading.Tasks.Task<ServiceMarca.Marca> ObtenerMarcaAsync(string oMarca)
        {
            return base.Channel.ObtenerMarcaAsync(oMarca);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceMarca))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceMarca))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:10524/ServiceMarca.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceMarcaClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceMarca);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceMarcaClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceMarca);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceMarca,
        }
    }
}
